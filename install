#!/bin/sh

# Installing FTE has gotten too complicated for a makefile.  Thus, a shell
# script.

# SETTINGS:

# Everything goes into this directory.  If it's not set, we'll use a default.
PREFIX=${PREFIX:-/usr/local}


# INSTALLATION CODE (do not touch):

BINDIR=$PREFIX/bin
LIBDIR=$PREFIX/lib/fte
CONFIGDIR=$LIBDIR/config

LOCALCONFIGDIR=$LIBDIR/localconfig

# To do some of this stuff, you should be root...
if [ -z "$INSTALL_NONROOT" ]
then
    id | grep "^uid=0(" > /dev/null
    if [ $? -ne 0 ]
    then
        echo "We don't recommend installing as non-root.  To try anyway,"
        echo "export INSTALL_NONROOT=1 before running the install."
        exit 1
    fi
else
	echo "Root-check bypassed - installing at your own risk"
fi

# Ensure everything is made.
make all
if [ $? -ne 0 ]
then
	echo "Not everything could be made - not going to install it."
    exit 1
fi

# If there is a config directory, remove it.
rm -rf $CONFIGDIR

# Make the directories we'll need.
mkdir -p $BINDIR
mkdir -p $LIBDIR
mkdir -p $LOCALCONFIGDIR

# Set up our binaries.
cp fte $BINDIR
cp src/xfte $BINDIR
cp src/cfte $BINDIR

# Copy our configuration.
cp -r config $LIBDIR
# Somehow things may not all be properly readable by everyone.
chmod a+r $CONFIGDIR/*
chmod a+r $CONFIGDIR/*/*

# Set the directories to be world-executable.  Except any directory called CVS.
find $CONFIGDIR -type d ! -name CVS | while read dir
do
	chmod a+x $dir
done

# If the sysadmin does not have a system-wide config, set it up.
# If it already exists DO NOT OVERWRITE IT.
if [ ! -f $LOCALCONFIGDIR/systemmain.fte ]
then
	mv $CONFIGDIR/systemmain.fte $LOCALCONFIGDIR
fi

# Set up the system default rc file.
(cd $CONFIGDIR; $BINDIR/cfte main.fte $LIBDIR/system.fterc)

# Done.
exit 0
